//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1053 with alias "metadata"
	/// <summary>Metadata</summary>
	public partial interface IMetadata : IPublishedContent
	{
		/// <summary>Page Description</summary>
		string PageDescription { get; }

		/// <summary>Page Tags</summary>
		IEnumerable<string> PageTags { get; }

		/// <summary>Page Title</summary>
		string PageTitle { get; }
	}

	/// <summary>Metadata</summary>
	[PublishedContentModel("metadata")]
	public partial class Metadata : PublishedContentModel, IMetadata
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "metadata";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Metadata(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Metadata, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Page Description: The html description for the page
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return GetPageDescription(this); }
		}

		/// <summary>Static getter for Page Description</summary>
		public static string GetPageDescription(IMetadata that) { return that.GetPropertyValue<string>("pageDescription"); }

		///<summary>
		/// Page Tags: The descriptive tags for the page
		///</summary>
		[ImplementPropertyType("pageTags")]
		public IEnumerable<string> PageTags
		{
			get { return GetPageTags(this); }
		}

		/// <summary>Static getter for Page Tags</summary>
		public static IEnumerable<string> GetPageTags(IMetadata that) { return that.GetPropertyValue<IEnumerable<string>>("pageTags"); }

		///<summary>
		/// Page Title: The html title-tag content for the page
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return GetPageTitle(this); }
		}

		/// <summary>Static getter for Page Title</summary>
		public static string GetPageTitle(IMetadata that) { return that.GetPropertyValue<string>("pageTitle"); }
	}
}
